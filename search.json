[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021-2022 Kompetenzzentrum Wasser Berlin gGmbH (KWB) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/case-study_satellite-image-classification.html","id":"define-paths","dir":"Articles","previous_headings":"","what":"Define paths","title":"Case Study: Satellite Image Classification","text":"","code":"# Load the R package library(kwb.ml)  ### define paths  path_list <- list(   local_dir = getwd(),   cloud_dir = \"projects/keys/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis\",   site = \"Jinxi\",   data = \"WP2_SUW_pollution_<site>\",   gis = \"<local_dir>/<data>/_DataAnalysis/gis\",   pattern_image = 'input_image\\\\.img$',   pattern_groundtruth = 'input_groundtruth\\\\.*',   satellite_image = \"<gis>/input_image.img\",   groundtruth = \"<gis>/input_groundtruth.shp\" )  paths <- kwb.utils::resolve(path_list)"},{"path":"/articles/case-study_satellite-image-classification.html","id":"image-files","dir":"Articles","previous_headings":"","what":"Image Files","title":"Case Study: Satellite Image Classification","text":"tutorial needs one satellite input_image.img file directly downloaded KWB Cloud. Currently seven input files required: input_image.img (input: name satellite image file) <input_groundtruth>.shp|dbf|cpg|prj|qpj|shx (input: groundtruth data)","code":""},{"path":"/articles/case-study_satellite-image-classification.html","id":"cloud","dir":"Articles","previous_headings":"Image Files","what":"Cloud","title":"Case Study: Satellite Image Classification","text":"can download required files KWB cloud registered user access folder projects/keys/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis follow steps : Open RStudio run usethis::edit_r_environ() opened window add required environment variables creating <-nextcloud-app-password>: go : https://replace--dwc-cloud-url/index.php/settings/user/security scroll create new app password select name e.g. r-script copy token replace -nextcloud-app-password Finally need restart Rstudio proceed code :","code":"NEXTCLOUD_URL = \"https://<replace-with-kwb-cloud-url>\" NEXTCLOUD_USER = \"<your-kwb-cloud-username>\" # your username NEXTCLOUD_PASSWORD = \"your-nextcloud-app-password\" ### see details below required_files <- paste0(c(paths$pattern_image,                            paths$pattern_groundtruth),                          collapse = \"|\")   # Download .cbc and .bhd and .dis files ml_files <- kwb.nextcloud::list_files(   paths$cloud_dir,   full_info = TRUE) %>%   dplyr::filter(stringr::str_detect(.data$file,                                     pattern = required_files)) #> Listing #> Listing projects/keys/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis  ml_files #>                    file isdir                             etag #> 1 input_groundtruth.cpg FALSE f549dbab383fb8eb163b613d9f4031c9 #> 2 input_groundtruth.dbf FALSE 4e0165b4b6969e196c69e560e3d89102 #> 3 input_groundtruth.prj FALSE f2cea503a02c98e8069d8390591ecdf9 #> 4 input_groundtruth.qpj FALSE b9bc0d871d32c3b9d4f59d75ec80223c #> 5 input_groundtruth.shp FALSE c298b5624f5ee7dba32797d91cc572d0 #> 6 input_groundtruth.shx FALSE e52f7a2f50bad0fb0361488725b2efa1 #> 7       input_image.img FALSE 18e5bd87dcdb24e3d4c6653e8591f125 #>          lastmodified fileid permissions      size #> 1 2020-07-29 08:27:08 185827     RMGDNVW         5 #> 2 2020-08-04 07:31:18 185831     RMGDNVW      1536 #> 3 2020-07-29 08:27:08 185829     RMGDNVW       432 #> 4 2020-07-29 08:27:08 185838     RMGDNVW       605 #> 5 2020-08-04 07:31:18 185834     RMGDNVW     12500 #> 6 2020-08-04 07:31:18 185830     RMGDNVW       660 #> 7 2020-07-29 08:55:38 185922     RMGDNVW 518763915 #>                                                                                                         href #> 1 /remote.php/dav/files/mrustl/projects/keys/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.cpg #> 2 /remote.php/dav/files/mrustl/projects/keys/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.dbf #> 3 /remote.php/dav/files/mrustl/projects/keys/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.prj #> 4 /remote.php/dav/files/mrustl/projects/keys/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.qpj #> 5 /remote.php/dav/files/mrustl/projects/keys/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.shp #> 6 /remote.php/dav/files/mrustl/projects/keys/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.shx #> 7       /remote.php/dav/files/mrustl/projects/keys/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_image.img   if(!dir.exists(paths$gis)) fs::dir_create(paths$gis, recurse = TRUE)  kwb.nextcloud::download_files(href = ml_files$href,                               target_dir = paths$gis) #> Splitting paths ... ok. (0.00s)  #> Removing the first 10 path segments ... ok. (0.00s)  #> Putting path segments together ... ok. (0.00s)  #> Downloading /remote.php/dav/files/mrustl/projects/keys/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.cpg ... ok. (0.53s)  #> Downloading /remote.php/dav/files/mrustl/projects/keys/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.dbf ... ok. (0.51s)  #> Downloading /remote.php/dav/files/mrustl/projects/keys/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.prj ... ok. (0.76s)  #> Downloading /remote.php/dav/files/mrustl/projects/keys/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.qpj ... ok. (0.53s)  #> Downloading /remote.php/dav/files/mrustl/projects/keys/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.shp ... ok. (0.54s)  #> Downloading /remote.php/dav/files/mrustl/projects/keys/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.shx ... ok. (0.54s)  #> Downloading /remote.php/dav/files/mrustl/projects/keys/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_image.img ... ok. (30.33s) #> [1] \"/Users/runner/work/kwb.ml/kwb.ml/vignettes/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.cpg\" #> [2] \"/Users/runner/work/kwb.ml/kwb.ml/vignettes/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.dbf\" #> [3] \"/Users/runner/work/kwb.ml/kwb.ml/vignettes/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.prj\" #> [4] \"/Users/runner/work/kwb.ml/kwb.ml/vignettes/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.qpj\" #> [5] \"/Users/runner/work/kwb.ml/kwb.ml/vignettes/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.shp\" #> [6] \"/Users/runner/work/kwb.ml/kwb.ml/vignettes/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.shx\" #> [7] \"/Users/runner/work/kwb.ml/kwb.ml/vignettes/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_image.img\"  fs::dir_ls(paths$gis) #> /Users/runner/work/kwb.ml/kwb.ml/vignettes/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.cpg #> /Users/runner/work/kwb.ml/kwb.ml/vignettes/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.dbf #> /Users/runner/work/kwb.ml/kwb.ml/vignettes/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.prj #> /Users/runner/work/kwb.ml/kwb.ml/vignettes/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.qpj #> /Users/runner/work/kwb.ml/kwb.ml/vignettes/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.shp #> /Users/runner/work/kwb.ml/kwb.ml/vignettes/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.shx #> /Users/runner/work/kwb.ml/kwb.ml/vignettes/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_image.img  paths$satellite_image #> [1] \"/Users/runner/work/kwb.ml/kwb.ml/vignettes/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_image.img\" paths$groundtruth #> [1] \"/Users/runner/work/kwb.ml/kwb.ml/vignettes/WP2_SUW_pollution_Jinxi/_DataAnalysis/gis/input_groundtruth.shp\""},{"path":[]},{"path":[]},{"path":"/articles/case-study_satellite-image-classification.html","id":"satellite-image","dir":"Articles","previous_headings":"Machine Learning > Input Data","what":"Satellite Image","title":"Case Study: Satellite Image Classification","text":"","code":"library(raster) #> Loading required package: sp library(rgdal) #> Please note that rgdal will be retired by the end of 2023, #> plan transition to sf/stars/terra functions using GDAL and PROJ #> at your earliest convenience. #>  #> rgdal: version: 1.5-32, (SVN revision 1176) #> Geospatial Data Abstraction Library extensions to R successfully loaded #> Loaded GDAL runtime: GDAL 3.5.0, released 2022/05/10 #> Path to GDAL shared files: /usr/local/Cellar/gdal/3.5.0/share/gdal #>  GDAL does not use iconv for recoding strings. #> GDAL binary built with GEOS: TRUE  #> Loaded PROJ runtime: Rel. 9.0.0, March 1st, 2022, [PJ_VERSION: 900] #> Path to PROJ shared files: /Users/runner/Library/Application Support/proj:/usr/local/opt/proj/share/proj:/usr/local/Cellar/proj/9.0.0_1/share/proj #> PROJ CDN enabled: FALSE #> Linking to sp version:1.4-7 #> To mute warnings of possible GDAL/OSR exportToProj4() degradation, #> use options(\"rgdal_show_exportToProj4_warnings\"=\"none\") before loading sp or rgdal.  ## Plot 'satellite image'  satellite_image <- raster::stack(paths$satellite_image)   raster::plotRGB(satellite_image)"},{"path":"/articles/case-study_satellite-image-classification.html","id":"classification-dataset","dir":"Articles","previous_headings":"Machine Learning > Input Data","what":"Classification Dataset","title":"Case Study: Satellite Image Classification","text":"","code":"### Training dataset groundtruth <- raster::shapefile(paths$groundtruth) #> Warning in OGRSpatialRef(dsn, layer, morphFromESRI = morphFromESRI, dumpSRS = #> dumpSRS, : Discarded datum China_2000 in Proj4 definition: +proj=tmerc +lat_0=0 #> +lon_0=117 +k=1 +x_0=39500000 +y_0=0 +ellps=GRS80 +units=m +no_defs  ### number of pre-classified polygons for each categorie table(groundtruth$cover) #>  #> pervious     roof   shadow   street    water  #>       10       45        3        9        3  ### plot of pre-classified surfaces (used for model ML-training) raster::plot(groundtruth, col = topo.colors(5))"},{"path":"/articles/case-study_satellite-image-classification.html","id":"setup-model","dir":"Articles","previous_headings":"Machine Learning","what":"Setup Model","title":"Case Study: Satellite Image Classification","text":"Build random forest machine learning model classification following five urban surfaces: - roofs - streets - perivous areas - shadow (accounting classification artifacts due limited satellite image resolution) - water areas","code":"# build classification model kwb.ml::buildClassMod(   rawdir = paths$gis,   image = 'input_image.img',   groundTruth = 'input_groundtruth.shp',   groundTruthValues = list('roof' = 1,                             'street' = 2,                            'pervious' = 3,                            'shadow' = 4,                            'water' = 5),   spectrSigName = 'spectrSig.Rdata',   modelName = 'rForest.Rdata',   overlayExists = FALSE,   nCores = parallel::detectCores() - 1,   mtryGrd = 1:2,    ntreeGrd=seq(80, 150, by=10),   nfolds = 3,    nodesize = 3,    cvrepeats = 2) #>  #> loading spatial data... #> Warning in OGRSpatialRef(dsn, layer, morphFromESRI = morphFromESRI, dumpSRS = #> dumpSRS, : Discarded datum China_2000 in Proj4 definition: +proj=tmerc +lat_0=0 #> +lon_0=117 +k=1 +x_0=39500000 +y_0=0 +ellps=GRS80 +units=m +no_defs #>  #> done #>  #> extracting spectral signatures of ground truth areas... #> done #>  #> saving overlay object... #> done #>  #> training model...note: only 2 unique complexity parameters in default grid. Truncating the grid to 2 . #>  #>  #> done #>  #> saving model... #> done  # check model performance load(file.path(paths$gis,\"rForest.Rdata\")) caret::confusionMatrix(data = model$finalModel$predicted,                         reference = model$trainingData$.outcome,                         mode = 'prec_recall') #> Confusion Matrix and Statistics #>  #>           Reference #> Prediction      1      2      3      4      5 #>          1  26924     98    336     10     11 #>          2    184   4398     52      0      0 #>          3    413    135  57932    159   1456 #>          4     13      7    141    580      5 #>          5     54      8   3457     17 111736 #>  #> Overall Statistics #>                                            #>                Accuracy : 0.9685           #>                  95% CI : (0.9677, 0.9692) #>     No Information Rate : 0.5439           #>     P-Value [Acc > NIR] : < 2.2e-16        #>                                            #>                   Kappa : 0.947            #>                                            #>  Mcnemar's Test P-Value : < 2.2e-16        #>  #> Statistics by Class: #>  #>                      Class: 1 Class: 2 Class: 3 Class: 4 Class: 5 #> Precision              0.9834  0.94907   0.9640 0.777480   0.9693 #> Recall                 0.9759  0.94662   0.9356 0.757180   0.9870 #> F1                     0.9796  0.94784   0.9496 0.767196   0.9781 #> Prevalence             0.1326  0.02232   0.2975 0.003680   0.5439 #> Detection Rate         0.1294  0.02113   0.2784 0.002787   0.5369 #> Detection Prevalence   0.1316  0.02227   0.2887 0.003584   0.5539 #> Balanced Accuracy      0.9867  0.97273   0.9604 0.878190   0.9749                         # classify image for roofs and streets kwb.ml::predictSurfClass(rawdir = paths$gis,                                     modelName = 'rForest.Rdata',                                     image = 'input_image.img',                                     predName = 'classified_image.img') #>  #> loading model... #> done #>  #> making predictions... #> done #>  #> writing output... #> done"},{"path":"/articles/getting-started.html","id":"learning","dir":"Articles","previous_headings":"","what":"Learning","title":"Getting Started","text":"Overview available machine learning frameworks R, ordered cutting-edge outdated: tidymodels: collection packages modeling machine learning using tidyverse principle covering whole workflow (data pre-processing evaluating model performance). also make simple switch different models. Recommended e-learning course (~4h) offered DataCamp Modeling tidymodels R. mlr3: R package developed statisticians TU Dortmund. make easy develop different machine learning models. Maybe alternative tidymodels approach? caret: R package machine learning. Outdated, main developer Max Kuhn now works R Studio improving tidymodels framework mentioned .","code":""},{"path":"/articles/getting-started.html","id":"resources","dir":"Articles","previous_headings":"","what":"Resources","title":"Getting Started","text":"Books Max Kuhn & Julia Silge (2021): Tidy Modeling R (free HTML version) Becker et al. 2021: mlr3 book (free HTML version) Chester Ismay & Albert Y. Kim (2021): Statistical Inference via Data Science - ModernDive R Tidyverse (free HTML version) Bradley Boehmke & Brandon Greenwell (2020): Hands-Machine Learning R (free HTML version) Hefin Ioan Rhys (2020): Machine Learning R, tidyverse, mlr (partly free HTML version) General Book Recommendation … “… R users want improve programming skills understanding language. also useful programmers coming R languages,” — Hadley Wickam (2021): Advanced R (2nd edition) (free HTML version) E-Learning plattform Datacamp: offers 37 Machine Learning courses R. KWB premium company account. working KWB interested please follow Learning R DataCamp workflow.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Rustler. Author, maintainer. . Funder. . Funder. . Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rustler M (2022). kwb.ml: R Package Functions, Workflows Tutorials Machine Learning KWB. R package version 0.1.0, https://github.com/KWB-R/kwb.ml.","code":"@Manual{,   title = {kwb.ml: R Package with Functions, Workflows and Tutorials for Machine Learning at KWB},   author = {Michael Rustler},   year = {2022},   note = {R package version 0.1.0},   url = {https://github.com/KWB-R/kwb.ml}, }"},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Package with Functions, Workflows and Tutorials for\n    Machine Learning at KWB","text":"installing latest release R package run following code :","code":"# Enable repository from kwb-r options(repos = c(   kwbr = 'https://kwb-r.r-universe.dev',   CRAN = 'https://cloud.r-project.org'))    # Download and install kwb.ml in R install.packages('kwb.ml')  # Browse the kwb.ml manual pages help(package = 'kwb.ml')"},{"path":"/reference/buildClassMod.html","id":null,"dir":"Reference","previous_headings":"","what":"build image classification model (random forest) — buildClassMod","title":"build image classification model (random forest) — buildClassMod","text":"Wrapper function fitting random forest using multi-band image purpose classifying pixels roof, street, pervious (green areas, water surface), etc. categories defined user ground truth data. Training testing done using repeated cross-validation package caret","code":""},{"path":"/reference/buildClassMod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"build image classification model (random forest) — buildClassMod","text":"","code":"buildClassMod(   rawdir,   image,   groundTruth,   groundTruthValues = list(roof = 1, street = 2, pervious = 3, shadow = 4, water = 5),   overlayExists = FALSE,   spectrSigName,   modelName,   nCores = parallel::detectCores() - 1,   mtryGrd,   ntreeGrd,   nfolds = 3,   nodesize = 3,   cvrepeats = 2 )"},{"path":"/reference/buildClassMod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"build image classification model (random forest) — buildClassMod","text":"rawdir path directory containing image classified ground truth data. image image classified. Supported formats given raster package's brick function. groundTruth shapefile containing polygons indicating observed classes sample pixels. classes must contained column named 'cover' shape-file's attribute table. table may contain columns. groundTruthValues list key value pairs (default: list('roof' = 1, 'street' = 2, 'pervious' = 3, 'shadow' = 4, 'water' = 5)) overlayExists FALSE, function overlays ground truth data image (time consuming) saves R object containing former's spectral signatures name spectrSigName (overlay object). TRUE, function skip overlay operation read existing overlay object name 'spectrSigName'. (default: FALSE) spectrSigName File name overlay object, either saving new load existing file. modelName File name saving fitted random forest model nCores . cores running parallel mode (uses library 'doParallel'), (default: parallel::detectCores() - 1) mtryGrd Number trees grow. random forests literature, referred ntree parameter. Larger number trees produce stable models covariate importance estimates, require memory longer run time. small datasets, 50 trees may sufficient. larger datasets, 500 may required. Please consult random forests literature extensive discussion parameter (e.g. Cutler et al., 2007; Strobl et al., 2007; Strobl et al., 2008). ntreeGrd Number variables available splitting tree node. random forests literature, referred mtry parameter. extensive discussion literature influence mtry. Cutler et al. (2007) reported different values mtry affect correct classification rates model performance metrics (sensitivity, specificity, kappa, ROC AUC) stable different values mtry. hand, Strobl et al. (2008) reported mtry strong influence predictor variable importance estimates. nfolds number folds repeated cross validation (caret), (default: 3) nodesize single value (included grid search), (default: 3) cvrepeats number repeats repeated cross validation (caret), (default: 2)","code":""},{"path":"/reference/buildClassMod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"build image classification model (random forest) — buildClassMod","text":"Writes spectralSignatures (overlayExists FALSE) fitted random forest model name modelName.","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/predictSurfClass.html","id":null,"dir":"Reference","previous_headings":"","what":"apply model to predict surface type (roof, street, ...) — predictSurfClass","title":"apply model to predict surface type (roof, street, ...) — predictSurfClass","text":"apply model predict surface type (roof, street, ...)","code":""},{"path":"/reference/predictSurfClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"apply model to predict surface type (roof, street, ...) — predictSurfClass","text":"","code":"predictSurfClass(rawdir, modelName, image, predName)"},{"path":"/reference/predictSurfClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"apply model to predict surface type (roof, street, ...) — predictSurfClass","text":"rawdir path raw data directory modelName Name fitted random forest model saved buildClassMod image Image classified predName Name output raster file (classified image)","code":""},{"path":"/reference/predictSurfClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"apply model to predict surface type (roof, street, ...) — predictSurfClass","text":"Writes raster \"rawdir\" file name \"predName\"","code":""},{"path":"/news/index.html","id":"kwbml-010-2022-05-19","dir":"Changelog","previous_headings":"","what":"kwb.ml 0.1.0 2022-05-19","title":"kwb.ml 0.1.0 2022-05-19","text":"Documentation R workflow developed project KEYS urban surface classification based satellite image completed. details checkout Case Study: Satellite Image Classification article.","code":""},{"path":"/news/index.html","id":"kwbml-0009000","dir":"Changelog","previous_headings":"","what":"kwb.ml 0.0.0.9000","title":"kwb.ml 0.0.0.9000","text":"Added NEWS.md file track changes package. see https://style.tidyverse.org/news.html writing good NEWS.md","code":""}]
